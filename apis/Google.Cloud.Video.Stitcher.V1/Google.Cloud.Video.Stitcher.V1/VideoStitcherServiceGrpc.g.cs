// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/video/stitcher/v1/video_stitcher_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Video.Stitcher.V1 {
  /// <summary>
  /// Video-On-Demand content stitching API allows you to insert ads
  /// into (VoD) video on demand files. You will be able to render custom
  /// scrubber bars with highlighted ads, enforce ad policies, allow
  /// seamless playback and tracking on native players and monetize
  /// content with any standard VMAP compliant ad server.
  /// </summary>
  public static partial class VideoStitcherService
  {
    static readonly string __ServiceName = "google.cloud.video.stitcher.v1.VideoStitcherService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.CreateCdnKeyRequest> __Marshaller_google_cloud_video_stitcher_v1_CreateCdnKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.CreateCdnKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.CdnKey> __Marshaller_google_cloud_video_stitcher_v1_CdnKey = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.CdnKey.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysRequest> __Marshaller_google_cloud_video_stitcher_v1_ListCdnKeysRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysResponse> __Marshaller_google_cloud_video_stitcher_v1_ListCdnKeysResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.GetCdnKeyRequest> __Marshaller_google_cloud_video_stitcher_v1_GetCdnKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.GetCdnKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.DeleteCdnKeyRequest> __Marshaller_google_cloud_video_stitcher_v1_DeleteCdnKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.DeleteCdnKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.UpdateCdnKeyRequest> __Marshaller_google_cloud_video_stitcher_v1_UpdateCdnKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.UpdateCdnKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.CreateVodSessionRequest> __Marshaller_google_cloud_video_stitcher_v1_CreateVodSessionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.CreateVodSessionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.VodSession> __Marshaller_google_cloud_video_stitcher_v1_VodSession = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.VodSession.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.GetVodSessionRequest> __Marshaller_google_cloud_video_stitcher_v1_GetVodSessionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.GetVodSessionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsRequest> __Marshaller_google_cloud_video_stitcher_v1_ListVodStitchDetailsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsResponse> __Marshaller_google_cloud_video_stitcher_v1_ListVodStitchDetailsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.GetVodStitchDetailRequest> __Marshaller_google_cloud_video_stitcher_v1_GetVodStitchDetailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.GetVodStitchDetailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.VodStitchDetail> __Marshaller_google_cloud_video_stitcher_v1_VodStitchDetail = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.VodStitchDetail.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsRequest> __Marshaller_google_cloud_video_stitcher_v1_ListVodAdTagDetailsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsResponse> __Marshaller_google_cloud_video_stitcher_v1_ListVodAdTagDetailsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.GetVodAdTagDetailRequest> __Marshaller_google_cloud_video_stitcher_v1_GetVodAdTagDetailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.GetVodAdTagDetailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.VodAdTagDetail> __Marshaller_google_cloud_video_stitcher_v1_VodAdTagDetail = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.VodAdTagDetail.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsRequest> __Marshaller_google_cloud_video_stitcher_v1_ListLiveAdTagDetailsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsResponse> __Marshaller_google_cloud_video_stitcher_v1_ListLiveAdTagDetailsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.GetLiveAdTagDetailRequest> __Marshaller_google_cloud_video_stitcher_v1_GetLiveAdTagDetailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.GetLiveAdTagDetailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.LiveAdTagDetail> __Marshaller_google_cloud_video_stitcher_v1_LiveAdTagDetail = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.LiveAdTagDetail.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.CreateSlateRequest> __Marshaller_google_cloud_video_stitcher_v1_CreateSlateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.CreateSlateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.Slate> __Marshaller_google_cloud_video_stitcher_v1_Slate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.Slate.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.ListSlatesRequest> __Marshaller_google_cloud_video_stitcher_v1_ListSlatesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.ListSlatesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.ListSlatesResponse> __Marshaller_google_cloud_video_stitcher_v1_ListSlatesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.ListSlatesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.GetSlateRequest> __Marshaller_google_cloud_video_stitcher_v1_GetSlateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.GetSlateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.UpdateSlateRequest> __Marshaller_google_cloud_video_stitcher_v1_UpdateSlateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.UpdateSlateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.DeleteSlateRequest> __Marshaller_google_cloud_video_stitcher_v1_DeleteSlateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.DeleteSlateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.CreateLiveSessionRequest> __Marshaller_google_cloud_video_stitcher_v1_CreateLiveSessionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.CreateLiveSessionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.LiveSession> __Marshaller_google_cloud_video_stitcher_v1_LiveSession = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.LiveSession.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Video.Stitcher.V1.GetLiveSessionRequest> __Marshaller_google_cloud_video_stitcher_v1_GetLiveSessionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Video.Stitcher.V1.GetLiveSessionRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.CreateCdnKeyRequest, global::Google.Cloud.Video.Stitcher.V1.CdnKey> __Method_CreateCdnKey = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.CreateCdnKeyRequest, global::Google.Cloud.Video.Stitcher.V1.CdnKey>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCdnKey",
        __Marshaller_google_cloud_video_stitcher_v1_CreateCdnKeyRequest,
        __Marshaller_google_cloud_video_stitcher_v1_CdnKey);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysRequest, global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysResponse> __Method_ListCdnKeys = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysRequest, global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCdnKeys",
        __Marshaller_google_cloud_video_stitcher_v1_ListCdnKeysRequest,
        __Marshaller_google_cloud_video_stitcher_v1_ListCdnKeysResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.GetCdnKeyRequest, global::Google.Cloud.Video.Stitcher.V1.CdnKey> __Method_GetCdnKey = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.GetCdnKeyRequest, global::Google.Cloud.Video.Stitcher.V1.CdnKey>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCdnKey",
        __Marshaller_google_cloud_video_stitcher_v1_GetCdnKeyRequest,
        __Marshaller_google_cloud_video_stitcher_v1_CdnKey);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.DeleteCdnKeyRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteCdnKey = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.DeleteCdnKeyRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCdnKey",
        __Marshaller_google_cloud_video_stitcher_v1_DeleteCdnKeyRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.UpdateCdnKeyRequest, global::Google.Cloud.Video.Stitcher.V1.CdnKey> __Method_UpdateCdnKey = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.UpdateCdnKeyRequest, global::Google.Cloud.Video.Stitcher.V1.CdnKey>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCdnKey",
        __Marshaller_google_cloud_video_stitcher_v1_UpdateCdnKeyRequest,
        __Marshaller_google_cloud_video_stitcher_v1_CdnKey);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.CreateVodSessionRequest, global::Google.Cloud.Video.Stitcher.V1.VodSession> __Method_CreateVodSession = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.CreateVodSessionRequest, global::Google.Cloud.Video.Stitcher.V1.VodSession>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateVodSession",
        __Marshaller_google_cloud_video_stitcher_v1_CreateVodSessionRequest,
        __Marshaller_google_cloud_video_stitcher_v1_VodSession);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.GetVodSessionRequest, global::Google.Cloud.Video.Stitcher.V1.VodSession> __Method_GetVodSession = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.GetVodSessionRequest, global::Google.Cloud.Video.Stitcher.V1.VodSession>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetVodSession",
        __Marshaller_google_cloud_video_stitcher_v1_GetVodSessionRequest,
        __Marshaller_google_cloud_video_stitcher_v1_VodSession);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsRequest, global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsResponse> __Method_ListVodStitchDetails = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsRequest, global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListVodStitchDetails",
        __Marshaller_google_cloud_video_stitcher_v1_ListVodStitchDetailsRequest,
        __Marshaller_google_cloud_video_stitcher_v1_ListVodStitchDetailsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.GetVodStitchDetailRequest, global::Google.Cloud.Video.Stitcher.V1.VodStitchDetail> __Method_GetVodStitchDetail = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.GetVodStitchDetailRequest, global::Google.Cloud.Video.Stitcher.V1.VodStitchDetail>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetVodStitchDetail",
        __Marshaller_google_cloud_video_stitcher_v1_GetVodStitchDetailRequest,
        __Marshaller_google_cloud_video_stitcher_v1_VodStitchDetail);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsRequest, global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsResponse> __Method_ListVodAdTagDetails = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsRequest, global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListVodAdTagDetails",
        __Marshaller_google_cloud_video_stitcher_v1_ListVodAdTagDetailsRequest,
        __Marshaller_google_cloud_video_stitcher_v1_ListVodAdTagDetailsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.GetVodAdTagDetailRequest, global::Google.Cloud.Video.Stitcher.V1.VodAdTagDetail> __Method_GetVodAdTagDetail = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.GetVodAdTagDetailRequest, global::Google.Cloud.Video.Stitcher.V1.VodAdTagDetail>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetVodAdTagDetail",
        __Marshaller_google_cloud_video_stitcher_v1_GetVodAdTagDetailRequest,
        __Marshaller_google_cloud_video_stitcher_v1_VodAdTagDetail);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsRequest, global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsResponse> __Method_ListLiveAdTagDetails = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsRequest, global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListLiveAdTagDetails",
        __Marshaller_google_cloud_video_stitcher_v1_ListLiveAdTagDetailsRequest,
        __Marshaller_google_cloud_video_stitcher_v1_ListLiveAdTagDetailsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.GetLiveAdTagDetailRequest, global::Google.Cloud.Video.Stitcher.V1.LiveAdTagDetail> __Method_GetLiveAdTagDetail = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.GetLiveAdTagDetailRequest, global::Google.Cloud.Video.Stitcher.V1.LiveAdTagDetail>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLiveAdTagDetail",
        __Marshaller_google_cloud_video_stitcher_v1_GetLiveAdTagDetailRequest,
        __Marshaller_google_cloud_video_stitcher_v1_LiveAdTagDetail);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.CreateSlateRequest, global::Google.Cloud.Video.Stitcher.V1.Slate> __Method_CreateSlate = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.CreateSlateRequest, global::Google.Cloud.Video.Stitcher.V1.Slate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSlate",
        __Marshaller_google_cloud_video_stitcher_v1_CreateSlateRequest,
        __Marshaller_google_cloud_video_stitcher_v1_Slate);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.ListSlatesRequest, global::Google.Cloud.Video.Stitcher.V1.ListSlatesResponse> __Method_ListSlates = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.ListSlatesRequest, global::Google.Cloud.Video.Stitcher.V1.ListSlatesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSlates",
        __Marshaller_google_cloud_video_stitcher_v1_ListSlatesRequest,
        __Marshaller_google_cloud_video_stitcher_v1_ListSlatesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.GetSlateRequest, global::Google.Cloud.Video.Stitcher.V1.Slate> __Method_GetSlate = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.GetSlateRequest, global::Google.Cloud.Video.Stitcher.V1.Slate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSlate",
        __Marshaller_google_cloud_video_stitcher_v1_GetSlateRequest,
        __Marshaller_google_cloud_video_stitcher_v1_Slate);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.UpdateSlateRequest, global::Google.Cloud.Video.Stitcher.V1.Slate> __Method_UpdateSlate = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.UpdateSlateRequest, global::Google.Cloud.Video.Stitcher.V1.Slate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSlate",
        __Marshaller_google_cloud_video_stitcher_v1_UpdateSlateRequest,
        __Marshaller_google_cloud_video_stitcher_v1_Slate);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.DeleteSlateRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteSlate = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.DeleteSlateRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSlate",
        __Marshaller_google_cloud_video_stitcher_v1_DeleteSlateRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.CreateLiveSessionRequest, global::Google.Cloud.Video.Stitcher.V1.LiveSession> __Method_CreateLiveSession = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.CreateLiveSessionRequest, global::Google.Cloud.Video.Stitcher.V1.LiveSession>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateLiveSession",
        __Marshaller_google_cloud_video_stitcher_v1_CreateLiveSessionRequest,
        __Marshaller_google_cloud_video_stitcher_v1_LiveSession);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Video.Stitcher.V1.GetLiveSessionRequest, global::Google.Cloud.Video.Stitcher.V1.LiveSession> __Method_GetLiveSession = new grpc::Method<global::Google.Cloud.Video.Stitcher.V1.GetLiveSessionRequest, global::Google.Cloud.Video.Stitcher.V1.LiveSession>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLiveSession",
        __Marshaller_google_cloud_video_stitcher_v1_GetLiveSessionRequest,
        __Marshaller_google_cloud_video_stitcher_v1_LiveSession);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Video.Stitcher.V1.VideoStitcherServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of VideoStitcherService</summary>
    [grpc::BindServiceMethod(typeof(VideoStitcherService), "BindService")]
    public abstract partial class VideoStitcherServiceBase
    {
      /// <summary>
      /// Creates a new CDN key.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.CdnKey> CreateCdnKey(global::Google.Cloud.Video.Stitcher.V1.CreateCdnKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all CDN keys in the specified project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysResponse> ListCdnKeys(global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the specified CDN key.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.CdnKey> GetCdnKey(global::Google.Cloud.Video.Stitcher.V1.GetCdnKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the specified CDN key.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCdnKey(global::Google.Cloud.Video.Stitcher.V1.DeleteCdnKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the specified CDN key. Only update fields specified
      /// in the call method body.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.CdnKey> UpdateCdnKey(global::Google.Cloud.Video.Stitcher.V1.UpdateCdnKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a client side playback VOD session and returns the full
      /// tracking and playback metadata of the session.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.VodSession> CreateVodSession(global::Google.Cloud.Video.Stitcher.V1.CreateVodSessionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the full tracking, playback metadata, and relevant ad-ops
      /// logs for the specified VOD session.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.VodSession> GetVodSession(global::Google.Cloud.Video.Stitcher.V1.GetVodSessionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns a list of detailed stitching information of the specified VOD
      /// session.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsResponse> ListVodStitchDetails(global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the specified stitching information for the specified VOD session.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.VodStitchDetail> GetVodStitchDetail(global::Google.Cloud.Video.Stitcher.V1.GetVodStitchDetailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Return the list of ad tag details for the specified VOD session.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsResponse> ListVodAdTagDetails(global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the specified ad tag detail for the specified VOD session.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.VodAdTagDetail> GetVodAdTagDetail(global::Google.Cloud.Video.Stitcher.V1.GetVodAdTagDetailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Return the list of ad tag details for the specified live session.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsResponse> ListLiveAdTagDetails(global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the specified ad tag detail for the specified live session.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.LiveAdTagDetail> GetLiveAdTagDetail(global::Google.Cloud.Video.Stitcher.V1.GetLiveAdTagDetailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a slate.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.Slate> CreateSlate(global::Google.Cloud.Video.Stitcher.V1.CreateSlateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all slates in the specified project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.ListSlatesResponse> ListSlates(global::Google.Cloud.Video.Stitcher.V1.ListSlatesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the specified slate.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.Slate> GetSlate(global::Google.Cloud.Video.Stitcher.V1.GetSlateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the specified slate.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.Slate> UpdateSlate(global::Google.Cloud.Video.Stitcher.V1.UpdateSlateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the specified slate.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSlate(global::Google.Cloud.Video.Stitcher.V1.DeleteSlateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new live session.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.LiveSession> CreateLiveSession(global::Google.Cloud.Video.Stitcher.V1.CreateLiveSessionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the details for the specified live session.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Video.Stitcher.V1.LiveSession> GetLiveSession(global::Google.Cloud.Video.Stitcher.V1.GetLiveSessionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for VideoStitcherService</summary>
    public partial class VideoStitcherServiceClient : grpc::ClientBase<VideoStitcherServiceClient>
    {
      /// <summary>Creates a new client for VideoStitcherService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public VideoStitcherServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for VideoStitcherService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public VideoStitcherServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected VideoStitcherServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected VideoStitcherServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a new CDN key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.CdnKey CreateCdnKey(global::Google.Cloud.Video.Stitcher.V1.CreateCdnKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCdnKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new CDN key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.CdnKey CreateCdnKey(global::Google.Cloud.Video.Stitcher.V1.CreateCdnKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCdnKey, null, options, request);
      }
      /// <summary>
      /// Creates a new CDN key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.CdnKey> CreateCdnKeyAsync(global::Google.Cloud.Video.Stitcher.V1.CreateCdnKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCdnKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new CDN key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.CdnKey> CreateCdnKeyAsync(global::Google.Cloud.Video.Stitcher.V1.CreateCdnKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCdnKey, null, options, request);
      }
      /// <summary>
      /// Lists all CDN keys in the specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysResponse ListCdnKeys(global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCdnKeys(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all CDN keys in the specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysResponse ListCdnKeys(global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCdnKeys, null, options, request);
      }
      /// <summary>
      /// Lists all CDN keys in the specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysResponse> ListCdnKeysAsync(global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCdnKeysAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all CDN keys in the specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysResponse> ListCdnKeysAsync(global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCdnKeys, null, options, request);
      }
      /// <summary>
      /// Returns the specified CDN key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.CdnKey GetCdnKey(global::Google.Cloud.Video.Stitcher.V1.GetCdnKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCdnKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified CDN key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.CdnKey GetCdnKey(global::Google.Cloud.Video.Stitcher.V1.GetCdnKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCdnKey, null, options, request);
      }
      /// <summary>
      /// Returns the specified CDN key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.CdnKey> GetCdnKeyAsync(global::Google.Cloud.Video.Stitcher.V1.GetCdnKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCdnKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified CDN key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.CdnKey> GetCdnKeyAsync(global::Google.Cloud.Video.Stitcher.V1.GetCdnKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCdnKey, null, options, request);
      }
      /// <summary>
      /// Deletes the specified CDN key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCdnKey(global::Google.Cloud.Video.Stitcher.V1.DeleteCdnKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCdnKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified CDN key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCdnKey(global::Google.Cloud.Video.Stitcher.V1.DeleteCdnKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCdnKey, null, options, request);
      }
      /// <summary>
      /// Deletes the specified CDN key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCdnKeyAsync(global::Google.Cloud.Video.Stitcher.V1.DeleteCdnKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCdnKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified CDN key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCdnKeyAsync(global::Google.Cloud.Video.Stitcher.V1.DeleteCdnKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCdnKey, null, options, request);
      }
      /// <summary>
      /// Updates the specified CDN key. Only update fields specified
      /// in the call method body.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.CdnKey UpdateCdnKey(global::Google.Cloud.Video.Stitcher.V1.UpdateCdnKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCdnKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified CDN key. Only update fields specified
      /// in the call method body.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.CdnKey UpdateCdnKey(global::Google.Cloud.Video.Stitcher.V1.UpdateCdnKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCdnKey, null, options, request);
      }
      /// <summary>
      /// Updates the specified CDN key. Only update fields specified
      /// in the call method body.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.CdnKey> UpdateCdnKeyAsync(global::Google.Cloud.Video.Stitcher.V1.UpdateCdnKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCdnKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified CDN key. Only update fields specified
      /// in the call method body.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.CdnKey> UpdateCdnKeyAsync(global::Google.Cloud.Video.Stitcher.V1.UpdateCdnKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCdnKey, null, options, request);
      }
      /// <summary>
      /// Creates a client side playback VOD session and returns the full
      /// tracking and playback metadata of the session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.VodSession CreateVodSession(global::Google.Cloud.Video.Stitcher.V1.CreateVodSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateVodSession(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a client side playback VOD session and returns the full
      /// tracking and playback metadata of the session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.VodSession CreateVodSession(global::Google.Cloud.Video.Stitcher.V1.CreateVodSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateVodSession, null, options, request);
      }
      /// <summary>
      /// Creates a client side playback VOD session and returns the full
      /// tracking and playback metadata of the session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.VodSession> CreateVodSessionAsync(global::Google.Cloud.Video.Stitcher.V1.CreateVodSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateVodSessionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a client side playback VOD session and returns the full
      /// tracking and playback metadata of the session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.VodSession> CreateVodSessionAsync(global::Google.Cloud.Video.Stitcher.V1.CreateVodSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateVodSession, null, options, request);
      }
      /// <summary>
      /// Returns the full tracking, playback metadata, and relevant ad-ops
      /// logs for the specified VOD session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.VodSession GetVodSession(global::Google.Cloud.Video.Stitcher.V1.GetVodSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVodSession(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the full tracking, playback metadata, and relevant ad-ops
      /// logs for the specified VOD session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.VodSession GetVodSession(global::Google.Cloud.Video.Stitcher.V1.GetVodSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetVodSession, null, options, request);
      }
      /// <summary>
      /// Returns the full tracking, playback metadata, and relevant ad-ops
      /// logs for the specified VOD session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.VodSession> GetVodSessionAsync(global::Google.Cloud.Video.Stitcher.V1.GetVodSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVodSessionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the full tracking, playback metadata, and relevant ad-ops
      /// logs for the specified VOD session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.VodSession> GetVodSessionAsync(global::Google.Cloud.Video.Stitcher.V1.GetVodSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetVodSession, null, options, request);
      }
      /// <summary>
      /// Returns a list of detailed stitching information of the specified VOD
      /// session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsResponse ListVodStitchDetails(global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListVodStitchDetails(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a list of detailed stitching information of the specified VOD
      /// session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsResponse ListVodStitchDetails(global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListVodStitchDetails, null, options, request);
      }
      /// <summary>
      /// Returns a list of detailed stitching information of the specified VOD
      /// session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsResponse> ListVodStitchDetailsAsync(global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListVodStitchDetailsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a list of detailed stitching information of the specified VOD
      /// session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsResponse> ListVodStitchDetailsAsync(global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListVodStitchDetails, null, options, request);
      }
      /// <summary>
      /// Returns the specified stitching information for the specified VOD session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.VodStitchDetail GetVodStitchDetail(global::Google.Cloud.Video.Stitcher.V1.GetVodStitchDetailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVodStitchDetail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified stitching information for the specified VOD session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.VodStitchDetail GetVodStitchDetail(global::Google.Cloud.Video.Stitcher.V1.GetVodStitchDetailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetVodStitchDetail, null, options, request);
      }
      /// <summary>
      /// Returns the specified stitching information for the specified VOD session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.VodStitchDetail> GetVodStitchDetailAsync(global::Google.Cloud.Video.Stitcher.V1.GetVodStitchDetailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVodStitchDetailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified stitching information for the specified VOD session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.VodStitchDetail> GetVodStitchDetailAsync(global::Google.Cloud.Video.Stitcher.V1.GetVodStitchDetailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetVodStitchDetail, null, options, request);
      }
      /// <summary>
      /// Return the list of ad tag details for the specified VOD session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsResponse ListVodAdTagDetails(global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListVodAdTagDetails(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Return the list of ad tag details for the specified VOD session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsResponse ListVodAdTagDetails(global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListVodAdTagDetails, null, options, request);
      }
      /// <summary>
      /// Return the list of ad tag details for the specified VOD session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsResponse> ListVodAdTagDetailsAsync(global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListVodAdTagDetailsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Return the list of ad tag details for the specified VOD session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsResponse> ListVodAdTagDetailsAsync(global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListVodAdTagDetails, null, options, request);
      }
      /// <summary>
      /// Returns the specified ad tag detail for the specified VOD session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.VodAdTagDetail GetVodAdTagDetail(global::Google.Cloud.Video.Stitcher.V1.GetVodAdTagDetailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVodAdTagDetail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified ad tag detail for the specified VOD session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.VodAdTagDetail GetVodAdTagDetail(global::Google.Cloud.Video.Stitcher.V1.GetVodAdTagDetailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetVodAdTagDetail, null, options, request);
      }
      /// <summary>
      /// Returns the specified ad tag detail for the specified VOD session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.VodAdTagDetail> GetVodAdTagDetailAsync(global::Google.Cloud.Video.Stitcher.V1.GetVodAdTagDetailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVodAdTagDetailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified ad tag detail for the specified VOD session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.VodAdTagDetail> GetVodAdTagDetailAsync(global::Google.Cloud.Video.Stitcher.V1.GetVodAdTagDetailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetVodAdTagDetail, null, options, request);
      }
      /// <summary>
      /// Return the list of ad tag details for the specified live session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsResponse ListLiveAdTagDetails(global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLiveAdTagDetails(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Return the list of ad tag details for the specified live session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsResponse ListLiveAdTagDetails(global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListLiveAdTagDetails, null, options, request);
      }
      /// <summary>
      /// Return the list of ad tag details for the specified live session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsResponse> ListLiveAdTagDetailsAsync(global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLiveAdTagDetailsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Return the list of ad tag details for the specified live session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsResponse> ListLiveAdTagDetailsAsync(global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListLiveAdTagDetails, null, options, request);
      }
      /// <summary>
      /// Returns the specified ad tag detail for the specified live session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.LiveAdTagDetail GetLiveAdTagDetail(global::Google.Cloud.Video.Stitcher.V1.GetLiveAdTagDetailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLiveAdTagDetail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified ad tag detail for the specified live session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.LiveAdTagDetail GetLiveAdTagDetail(global::Google.Cloud.Video.Stitcher.V1.GetLiveAdTagDetailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLiveAdTagDetail, null, options, request);
      }
      /// <summary>
      /// Returns the specified ad tag detail for the specified live session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.LiveAdTagDetail> GetLiveAdTagDetailAsync(global::Google.Cloud.Video.Stitcher.V1.GetLiveAdTagDetailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLiveAdTagDetailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified ad tag detail for the specified live session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.LiveAdTagDetail> GetLiveAdTagDetailAsync(global::Google.Cloud.Video.Stitcher.V1.GetLiveAdTagDetailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLiveAdTagDetail, null, options, request);
      }
      /// <summary>
      /// Creates a slate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.Slate CreateSlate(global::Google.Cloud.Video.Stitcher.V1.CreateSlateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSlate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a slate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.Slate CreateSlate(global::Google.Cloud.Video.Stitcher.V1.CreateSlateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateSlate, null, options, request);
      }
      /// <summary>
      /// Creates a slate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.Slate> CreateSlateAsync(global::Google.Cloud.Video.Stitcher.V1.CreateSlateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSlateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a slate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.Slate> CreateSlateAsync(global::Google.Cloud.Video.Stitcher.V1.CreateSlateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateSlate, null, options, request);
      }
      /// <summary>
      /// Lists all slates in the specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.ListSlatesResponse ListSlates(global::Google.Cloud.Video.Stitcher.V1.ListSlatesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSlates(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all slates in the specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.ListSlatesResponse ListSlates(global::Google.Cloud.Video.Stitcher.V1.ListSlatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSlates, null, options, request);
      }
      /// <summary>
      /// Lists all slates in the specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.ListSlatesResponse> ListSlatesAsync(global::Google.Cloud.Video.Stitcher.V1.ListSlatesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSlatesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all slates in the specified project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.ListSlatesResponse> ListSlatesAsync(global::Google.Cloud.Video.Stitcher.V1.ListSlatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSlates, null, options, request);
      }
      /// <summary>
      /// Returns the specified slate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.Slate GetSlate(global::Google.Cloud.Video.Stitcher.V1.GetSlateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSlate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified slate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.Slate GetSlate(global::Google.Cloud.Video.Stitcher.V1.GetSlateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSlate, null, options, request);
      }
      /// <summary>
      /// Returns the specified slate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.Slate> GetSlateAsync(global::Google.Cloud.Video.Stitcher.V1.GetSlateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSlateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified slate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.Slate> GetSlateAsync(global::Google.Cloud.Video.Stitcher.V1.GetSlateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSlate, null, options, request);
      }
      /// <summary>
      /// Updates the specified slate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.Slate UpdateSlate(global::Google.Cloud.Video.Stitcher.V1.UpdateSlateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSlate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified slate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.Slate UpdateSlate(global::Google.Cloud.Video.Stitcher.V1.UpdateSlateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSlate, null, options, request);
      }
      /// <summary>
      /// Updates the specified slate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.Slate> UpdateSlateAsync(global::Google.Cloud.Video.Stitcher.V1.UpdateSlateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSlateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified slate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.Slate> UpdateSlateAsync(global::Google.Cloud.Video.Stitcher.V1.UpdateSlateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSlate, null, options, request);
      }
      /// <summary>
      /// Deletes the specified slate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSlate(global::Google.Cloud.Video.Stitcher.V1.DeleteSlateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSlate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified slate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSlate(global::Google.Cloud.Video.Stitcher.V1.DeleteSlateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSlate, null, options, request);
      }
      /// <summary>
      /// Deletes the specified slate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSlateAsync(global::Google.Cloud.Video.Stitcher.V1.DeleteSlateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSlateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified slate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSlateAsync(global::Google.Cloud.Video.Stitcher.V1.DeleteSlateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSlate, null, options, request);
      }
      /// <summary>
      /// Creates a new live session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.LiveSession CreateLiveSession(global::Google.Cloud.Video.Stitcher.V1.CreateLiveSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateLiveSession(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new live session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.LiveSession CreateLiveSession(global::Google.Cloud.Video.Stitcher.V1.CreateLiveSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateLiveSession, null, options, request);
      }
      /// <summary>
      /// Creates a new live session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.LiveSession> CreateLiveSessionAsync(global::Google.Cloud.Video.Stitcher.V1.CreateLiveSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateLiveSessionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new live session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.LiveSession> CreateLiveSessionAsync(global::Google.Cloud.Video.Stitcher.V1.CreateLiveSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateLiveSession, null, options, request);
      }
      /// <summary>
      /// Returns the details for the specified live session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.LiveSession GetLiveSession(global::Google.Cloud.Video.Stitcher.V1.GetLiveSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLiveSession(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the details for the specified live session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Video.Stitcher.V1.LiveSession GetLiveSession(global::Google.Cloud.Video.Stitcher.V1.GetLiveSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLiveSession, null, options, request);
      }
      /// <summary>
      /// Returns the details for the specified live session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.LiveSession> GetLiveSessionAsync(global::Google.Cloud.Video.Stitcher.V1.GetLiveSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLiveSessionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the details for the specified live session.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Video.Stitcher.V1.LiveSession> GetLiveSessionAsync(global::Google.Cloud.Video.Stitcher.V1.GetLiveSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLiveSession, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override VideoStitcherServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new VideoStitcherServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(VideoStitcherServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateCdnKey, serviceImpl.CreateCdnKey)
          .AddMethod(__Method_ListCdnKeys, serviceImpl.ListCdnKeys)
          .AddMethod(__Method_GetCdnKey, serviceImpl.GetCdnKey)
          .AddMethod(__Method_DeleteCdnKey, serviceImpl.DeleteCdnKey)
          .AddMethod(__Method_UpdateCdnKey, serviceImpl.UpdateCdnKey)
          .AddMethod(__Method_CreateVodSession, serviceImpl.CreateVodSession)
          .AddMethod(__Method_GetVodSession, serviceImpl.GetVodSession)
          .AddMethod(__Method_ListVodStitchDetails, serviceImpl.ListVodStitchDetails)
          .AddMethod(__Method_GetVodStitchDetail, serviceImpl.GetVodStitchDetail)
          .AddMethod(__Method_ListVodAdTagDetails, serviceImpl.ListVodAdTagDetails)
          .AddMethod(__Method_GetVodAdTagDetail, serviceImpl.GetVodAdTagDetail)
          .AddMethod(__Method_ListLiveAdTagDetails, serviceImpl.ListLiveAdTagDetails)
          .AddMethod(__Method_GetLiveAdTagDetail, serviceImpl.GetLiveAdTagDetail)
          .AddMethod(__Method_CreateSlate, serviceImpl.CreateSlate)
          .AddMethod(__Method_ListSlates, serviceImpl.ListSlates)
          .AddMethod(__Method_GetSlate, serviceImpl.GetSlate)
          .AddMethod(__Method_UpdateSlate, serviceImpl.UpdateSlate)
          .AddMethod(__Method_DeleteSlate, serviceImpl.DeleteSlate)
          .AddMethod(__Method_CreateLiveSession, serviceImpl.CreateLiveSession)
          .AddMethod(__Method_GetLiveSession, serviceImpl.GetLiveSession).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, VideoStitcherServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateCdnKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.CreateCdnKeyRequest, global::Google.Cloud.Video.Stitcher.V1.CdnKey>(serviceImpl.CreateCdnKey));
      serviceBinder.AddMethod(__Method_ListCdnKeys, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysRequest, global::Google.Cloud.Video.Stitcher.V1.ListCdnKeysResponse>(serviceImpl.ListCdnKeys));
      serviceBinder.AddMethod(__Method_GetCdnKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.GetCdnKeyRequest, global::Google.Cloud.Video.Stitcher.V1.CdnKey>(serviceImpl.GetCdnKey));
      serviceBinder.AddMethod(__Method_DeleteCdnKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.DeleteCdnKeyRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteCdnKey));
      serviceBinder.AddMethod(__Method_UpdateCdnKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.UpdateCdnKeyRequest, global::Google.Cloud.Video.Stitcher.V1.CdnKey>(serviceImpl.UpdateCdnKey));
      serviceBinder.AddMethod(__Method_CreateVodSession, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.CreateVodSessionRequest, global::Google.Cloud.Video.Stitcher.V1.VodSession>(serviceImpl.CreateVodSession));
      serviceBinder.AddMethod(__Method_GetVodSession, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.GetVodSessionRequest, global::Google.Cloud.Video.Stitcher.V1.VodSession>(serviceImpl.GetVodSession));
      serviceBinder.AddMethod(__Method_ListVodStitchDetails, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsRequest, global::Google.Cloud.Video.Stitcher.V1.ListVodStitchDetailsResponse>(serviceImpl.ListVodStitchDetails));
      serviceBinder.AddMethod(__Method_GetVodStitchDetail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.GetVodStitchDetailRequest, global::Google.Cloud.Video.Stitcher.V1.VodStitchDetail>(serviceImpl.GetVodStitchDetail));
      serviceBinder.AddMethod(__Method_ListVodAdTagDetails, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsRequest, global::Google.Cloud.Video.Stitcher.V1.ListVodAdTagDetailsResponse>(serviceImpl.ListVodAdTagDetails));
      serviceBinder.AddMethod(__Method_GetVodAdTagDetail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.GetVodAdTagDetailRequest, global::Google.Cloud.Video.Stitcher.V1.VodAdTagDetail>(serviceImpl.GetVodAdTagDetail));
      serviceBinder.AddMethod(__Method_ListLiveAdTagDetails, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsRequest, global::Google.Cloud.Video.Stitcher.V1.ListLiveAdTagDetailsResponse>(serviceImpl.ListLiveAdTagDetails));
      serviceBinder.AddMethod(__Method_GetLiveAdTagDetail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.GetLiveAdTagDetailRequest, global::Google.Cloud.Video.Stitcher.V1.LiveAdTagDetail>(serviceImpl.GetLiveAdTagDetail));
      serviceBinder.AddMethod(__Method_CreateSlate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.CreateSlateRequest, global::Google.Cloud.Video.Stitcher.V1.Slate>(serviceImpl.CreateSlate));
      serviceBinder.AddMethod(__Method_ListSlates, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.ListSlatesRequest, global::Google.Cloud.Video.Stitcher.V1.ListSlatesResponse>(serviceImpl.ListSlates));
      serviceBinder.AddMethod(__Method_GetSlate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.GetSlateRequest, global::Google.Cloud.Video.Stitcher.V1.Slate>(serviceImpl.GetSlate));
      serviceBinder.AddMethod(__Method_UpdateSlate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.UpdateSlateRequest, global::Google.Cloud.Video.Stitcher.V1.Slate>(serviceImpl.UpdateSlate));
      serviceBinder.AddMethod(__Method_DeleteSlate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.DeleteSlateRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteSlate));
      serviceBinder.AddMethod(__Method_CreateLiveSession, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.CreateLiveSessionRequest, global::Google.Cloud.Video.Stitcher.V1.LiveSession>(serviceImpl.CreateLiveSession));
      serviceBinder.AddMethod(__Method_GetLiveSession, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Video.Stitcher.V1.GetLiveSessionRequest, global::Google.Cloud.Video.Stitcher.V1.LiveSession>(serviceImpl.GetLiveSession));
    }

  }
}
#endregion
